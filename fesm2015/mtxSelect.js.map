{"version":3,"file":"mtxSelect.js","sources":["../../../projects/extensions/select/templates.directive.ts","../../../projects/extensions/select/option.component.ts","../../../projects/extensions/select/select.component.ts","../../../projects/extensions/select/select.module.ts","../../../projects/extensions/select/mtxSelect.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ng-option-tmp]' })\nexport class MtxSelectOptionTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-optgroup-tmp]' })\nexport class MtxSelectOptgroupTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-label-tmp]' })\nexport class MtxSelectLabelTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-multi-label-tmp]' })\nexport class MtxSelectMultiLabelTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-header-tmp]' })\nexport class MtxSelectHeaderTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-footer-tmp]' })\nexport class MtxSelectFooterTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-notfound-tmp]' })\nexport class MtxSelectNotFoundTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-typetosearch-tmp]' })\nexport class MtxSelectTypeToSearchTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-loadingtext-tmp]' })\nexport class MtxSelectLoadingTextTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-tag-tmp]' })\nexport class MtxSelectTagTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-loadingspinner-tmp]' })\nexport class MtxSelectLoadingSpinnerTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n","import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'mtx-option',\n  exportAs: 'mtxOption',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-content></ng-content>`,\n})\nexport class MtxOptionComponent implements OnChanges, AfterViewChecked, OnDestroy {\n  @Input() value: any;\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = this._isDisabled(value);\n  }\n\n  readonly stateChange$ = new Subject<{ value: any; disabled: boolean; label?: string }>();\n\n  private _disabled = false;\n  private _previousLabel: string;\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n\n  get label(): string {\n    return (this.elementRef.nativeElement.textContent || '').trim();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.disabled) {\n      this.stateChange$.next({\n        value: this.value,\n        disabled: this._disabled,\n      });\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.label !== this._previousLabel) {\n      this._previousLabel = this.label;\n      this.stateChange$.next({\n        value: this.value,\n        disabled: this._disabled,\n        label: this.elementRef.nativeElement.innerHTML,\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChange$.complete();\n  }\n\n  private _isDisabled(value: null) {\n    return value != null && `${value}` !== 'false';\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  ElementRef,\n  ChangeDetectorRef,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  AfterViewInit,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\n\nimport {\n  MtxSelectOptionTemplateDirective,\n  MtxSelectLabelTemplateDirective,\n  MtxSelectHeaderTemplateDirective,\n  MtxSelectFooterTemplateDirective,\n  MtxSelectOptgroupTemplateDirective,\n  MtxSelectNotFoundTemplateDirective,\n  MtxSelectTypeToSearchTemplateDirective,\n  MtxSelectLoadingTextTemplateDirective,\n  MtxSelectMultiLabelTemplateDirective,\n  MtxSelectTagTemplateDirective,\n  MtxSelectLoadingSpinnerTemplateDirective,\n} from './templates.directive';\nimport { MtxOptionComponent } from './option.component';\nimport { NgSelectComponent } from '@ng-select/ng-select';\n\nexport type DropdownPosition = 'bottom' | 'top' | 'auto';\nexport type AddTagFn = (term: string) => any | Promise<any>;\nexport type CompareWithFn = (a: any, b: any) => boolean;\nexport type GroupValueFn = (key: string | object, children: any[]) => string | object;\nexport type SearchFn = (term: string, item: any) => boolean;\nexport type TrackByFn = (item: any) => any;\n\nexport function isDefined(value: any) {\n  return value !== undefined && value !== null;\n}\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'mtx-select',\n  exportAs: 'mtxSelect',\n  host: {\n    '[attr.id]': 'id',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[class.mtx-select-floating]': 'shouldLabelFloat',\n    '[class.mtx-select-invalid]': 'errorState',\n    'class': 'mtx-select',\n  },\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: MatFormFieldControl, useExisting: MtxSelectComponent }],\n})\nexport class MtxSelectComponent\n  implements\n    OnInit,\n    OnDestroy,\n    DoCheck,\n    AfterViewInit,\n    ControlValueAccessor,\n    MatFormFieldControl<any> {\n  @ViewChild('ngSelect', { static: true }) ngSelect: NgSelectComponent;\n\n  // MtxSelect custom templates\n  @ContentChild(MtxSelectOptionTemplateDirective, { read: TemplateRef })\n  optionTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectOptgroupTemplateDirective, { read: TemplateRef })\n  optgroupTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectLabelTemplateDirective, { read: TemplateRef })\n  labelTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectMultiLabelTemplateDirective, { read: TemplateRef })\n  multiLabelTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectHeaderTemplateDirective, { read: TemplateRef })\n  headerTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectFooterTemplateDirective, { read: TemplateRef })\n  footerTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectNotFoundTemplateDirective, { read: TemplateRef })\n  notFoundTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectTypeToSearchTemplateDirective, { read: TemplateRef })\n  typeToSearchTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectLoadingTextTemplateDirective, { read: TemplateRef })\n  loadingTextTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectTagTemplateDirective, { read: TemplateRef }) tagTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectLoadingSpinnerTemplateDirective, { read: TemplateRef })\n  loadingSpinnerTemplate: TemplateRef<any>;\n\n  @ContentChildren(MtxOptionComponent, { descendants: true })\n  mtxOptions: QueryList<MtxOptionComponent>;\n\n  /** MtxSelect options */\n  @Input() addTag: boolean | AddTagFn = false;\n  @Input() addTagText = 'Add item';\n  @Input() appearance = 'underline';\n  @Input() appendTo: string;\n  @Input() bindLabel: string;\n  @Input() bindValue: string;\n  @Input() closeOnSelect = true;\n  @Input() clearAllText = 'Clear all';\n  @Input() clearable = true;\n  @Input() clearOnBackspace = true;\n  @Input() compareWith: CompareWithFn;\n  @Input() dropdownPosition: DropdownPosition = 'auto';\n  @Input() groupBy: string | (() => void);\n  @Input() groupValue: GroupValueFn;\n  @Input() selectableGroup = false;\n  @Input() selectableGroupAsModel = true;\n  @Input() hideSelected = false;\n  @Input() isOpen: boolean;\n  @Input() loading = false;\n  @Input() loadingText = 'Loading...';\n  @Input() labelForId: string | null = null;\n  @Input() markFirst = true;\n  @Input() maxSelectedItems: number;\n  @Input() multiple = false;\n  @Input() notFoundText = 'No items found';\n  @Input() searchable = true;\n  @Input() readonly = false;\n  @Input() searchFn: SearchFn | null = null;\n  @Input() searchWhileComposing = true;\n  @Input() selectOnTab = false;\n  @Input() trackByFn: TrackByFn | null = null;\n  @Input() inputAttrs: { [key: string]: string } = {};\n  @Input() tabIndex: number;\n  @Input() openOnEnter: boolean;\n  @Input() minTermLength = 0;\n  @Input() editableSearchTerm = false;\n  @Input() keyDownFn = (_: KeyboardEvent) => true;\n  @Input() virtualScroll = false;\n  @Input() typeToSearchText = 'Type to search';\n  @Input() typeahead: Subject<string>;\n\n  @Output('blur') blurEvent = new EventEmitter();\n  @Output('focus') focusEvent = new EventEmitter();\n  @Output('change') changeEvent = new EventEmitter();\n  @Output('open') openEvent = new EventEmitter();\n  @Output('close') closeEvent = new EventEmitter();\n  @Output('search') searchEvent = new EventEmitter<{ term: string; items: any[] }>();\n  @Output('clear') clearEvent = new EventEmitter();\n  @Output('add') addEvent = new EventEmitter();\n  @Output('remove') removeEvent = new EventEmitter();\n  @Output('scroll') scroll = new EventEmitter<{ start: number; end: number }>();\n  @Output('scrollToEnd') scrollToEnd = new EventEmitter();\n\n  @Input()\n  get clearSearchOnAdd() {\n    return isDefined(this._clearSearchOnAdd) ? this._clearSearchOnAdd : this.closeOnSelect;\n  }\n  set clearSearchOnAdd(value) {\n    this._clearSearchOnAdd = value;\n  }\n  private _clearSearchOnAdd: boolean;\n\n  @Input()\n  get items() {\n    return this._items;\n  }\n  set items(value: any[]) {\n    this._itemsAreUsed = true;\n    this._items = value;\n  }\n  private _items: any[] = [];\n  private _itemsAreUsed: boolean;\n  private readonly _destroy$ = new Subject<void>();\n\n  /** Value of the select control. */\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(newValue: any) {\n    this._value = newValue;\n    this._onChange(newValue);\n    this.stateChanges.next();\n  }\n  private _value = null;\n\n  /** Implemented as part of MatFormFieldControl. */\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  /** Unique id of the element. */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n  private _id: string;\n\n  /** Unique id for this input. */\n  private _uid = `mtx-select-${nextUniqueId++}`;\n\n  /** Placeholder to be shown if value is empty. */\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  /** Whether the input is focused. */\n  get focused(): boolean {\n    return this._focused;\n  }\n  private _focused = false;\n\n  get empty(): boolean {\n    return this.value == null || (Array.isArray(this.value) && this.value.length === 0);\n  }\n\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.readonly = this._disabled;\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  errorState = false;\n\n  /** A name for this control that can be used by `mat-form-field`. */\n  controlType = 'mtx-select';\n\n  /** The aria-describedby attribute on the select for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => {};\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => {};\n\n  constructor(\n    private _focusMonitor: FocusMonitor,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\n      if (this._focused && !origin) {\n        this._onTouched();\n      }\n      this._focused = !!origin;\n      this.stateChanges.next();\n    });\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    // Fix compareWith warning of undefined value\n    // https://github.com/ng-select/ng-select/issues/1537\n    if (this.compareWith) {\n      this.ngSelect.compareWith = this.compareWith;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this._itemsAreUsed) {\n      this._setItemsFromMtxOptions();\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = (this.ngControl.invalid && this.ngControl.touched) as boolean;\n      this.stateChanges.next();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n    this.stateChanges.complete();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Implemented as part of MatFormFieldControl. */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /**\n   * Disables the select. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param isDisabled Sets whether the component is disabled.\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /** Implemented as part of MatFormFieldControl. */\n  onContainerClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    if (/mat-form-field|mtx-select/g.test(target.parentElement?.classList[0] || '')) {\n      this.focus();\n      this.open();\n    }\n  }\n\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    this.value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /** NgSelect: _setItemsFromNgOptions */\n\n  private _setItemsFromMtxOptions() {\n    const mapMtxOptions = (options: QueryList<MtxOptionComponent>) => {\n      this.items = options.map(option => ({\n        $ngOptionValue: option.value,\n        $ngOptionLabel: option.elementRef.nativeElement.innerHTML,\n        disabled: option.disabled,\n      }));\n      this.ngSelect.itemsList.setItems(this.items);\n      if (this.ngSelect.hasValue) {\n        this.ngSelect.itemsList.mapSelectedItems();\n      }\n      this.ngSelect.detectChanges();\n    };\n\n    const handleOptionChange = () => {\n      const changedOrDestroyed = merge(this.mtxOptions.changes, this._destroy$);\n      merge(...this.mtxOptions.map(option => option.stateChange$))\n        .pipe(takeUntil(changedOrDestroyed))\n        .subscribe(option => {\n          const item = this.ngSelect.itemsList.findItem(option.value);\n          item.disabled = option.disabled;\n          item.label = option.label || item.label;\n          this.ngSelect.detectChanges();\n        });\n    };\n\n    this.mtxOptions.changes\n      .pipe(startWith(this.mtxOptions), takeUntil(this._destroy$))\n      .subscribe(options => {\n        mapMtxOptions(options);\n        handleOptionChange();\n      });\n  }\n\n  open() {\n    this.ngSelect.open();\n  }\n\n  close() {\n    this.ngSelect.close();\n  }\n\n  focus() {\n    this.ngSelect.focus();\n  }\n\n  blur() {\n    this.ngSelect.blur();\n  }\n\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { MtxSelectComponent } from './select.component';\nimport {\n  MtxSelectFooterTemplateDirective,\n  MtxSelectHeaderTemplateDirective,\n  MtxSelectLabelTemplateDirective,\n  MtxSelectLoadingSpinnerTemplateDirective,\n  MtxSelectLoadingTextTemplateDirective,\n  MtxSelectMultiLabelTemplateDirective,\n  MtxSelectNotFoundTemplateDirective,\n  MtxSelectOptgroupTemplateDirective,\n  MtxSelectOptionTemplateDirective,\n  MtxSelectTagTemplateDirective,\n  MtxSelectTypeToSearchTemplateDirective,\n} from './templates.directive';\nimport { MtxOptionComponent } from './option.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, NgSelectModule],\n  exports: [\n    MtxSelectComponent,\n    MtxOptionComponent,\n    MtxSelectOptgroupTemplateDirective,\n    MtxSelectOptionTemplateDirective,\n    MtxSelectLabelTemplateDirective,\n    MtxSelectMultiLabelTemplateDirective,\n    MtxSelectHeaderTemplateDirective,\n    MtxSelectFooterTemplateDirective,\n    MtxSelectNotFoundTemplateDirective,\n    MtxSelectTypeToSearchTemplateDirective,\n    MtxSelectLoadingTextTemplateDirective,\n    MtxSelectTagTemplateDirective,\n    MtxSelectLoadingSpinnerTemplateDirective,\n  ],\n  declarations: [\n    MtxSelectComponent,\n    MtxOptionComponent,\n    MtxSelectOptgroupTemplateDirective,\n    MtxSelectOptionTemplateDirective,\n    MtxSelectLabelTemplateDirective,\n    MtxSelectMultiLabelTemplateDirective,\n    MtxSelectHeaderTemplateDirective,\n    MtxSelectFooterTemplateDirective,\n    MtxSelectNotFoundTemplateDirective,\n    MtxSelectTypeToSearchTemplateDirective,\n    MtxSelectLoadingTextTemplateDirective,\n    MtxSelectTagTemplateDirective,\n    MtxSelectLoadingSpinnerTemplateDirective,\n  ],\n})\nexport class MtxSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}