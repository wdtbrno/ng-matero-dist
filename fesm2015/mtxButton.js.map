{"version":3,"file":"mtxButton.js","sources":["../../../projects/extensions/button/button-loading.directive.ts","../../../projects/extensions/button/button.module.ts","../../../projects/extensions/button/mtxButton.ts"],"sourcesContent":["import {\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  Input,\r\n  OnChanges,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\r\n\r\n@Directive({\r\n  selector: `button[mat-button][loading],\r\n             button[mat-raised-button][loading],\r\n             button[mat-stroked-button][loading],\r\n             button[mat-flat-button][loading],\r\n             button[mat-icon-button][loading],\r\n             button[mat-fab][loading],\r\n             button[mat-mini-fab][loading]`,\r\n})\r\nexport class MatButtonLoadingDirective implements OnChanges {\r\n  private spinnerFactory: ComponentFactory<MatProgressSpinner>;\r\n  private spinner: ComponentRef<MatProgressSpinner> | null;\r\n\r\n  @Input()\r\n  loading: boolean;\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  color: ThemePalette;\r\n\r\n  constructor(\r\n    private matButton: MatButton,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private renderer: Renderer2\r\n  ) {\r\n    this.spinnerFactory = this.componentFactoryResolver.resolveComponentFactory(MatProgressSpinner);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!changes.loading) {\r\n      return;\r\n    }\r\n\r\n    if (changes.loading.currentValue) {\r\n      this.matButton._elementRef.nativeElement.classList.add('mat-button-loading');\r\n      this.matButton.disabled = true;\r\n      this.createSpinner();\r\n    } else if (!changes.loading.firstChange) {\r\n      this.matButton._elementRef.nativeElement.classList.remove('mat-button-loading');\r\n      this.matButton.disabled = this.disabled;\r\n      this.destroySpinner();\r\n    }\r\n  }\r\n\r\n  private createSpinner(): void {\r\n    if (!this.spinner) {\r\n      this.spinner = this.viewContainerRef.createComponent(this.spinnerFactory);\r\n      this.spinner.instance.color = this.color;\r\n      this.spinner.instance.diameter = 20;\r\n      this.spinner.instance.mode = 'indeterminate';\r\n      this.renderer.appendChild(\r\n        this.matButton._elementRef.nativeElement,\r\n        this.spinner.instance._elementRef.nativeElement\r\n      );\r\n    }\r\n  }\r\n\r\n  private destroySpinner(): void {\r\n    if (this.spinner) {\r\n      this.spinner.destroy();\r\n      this.spinner = null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonLoadingDirective } from './button-loading.directive';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatProgressSpinnerModule],\n  exports: [MatButtonLoadingDirective],\n  declarations: [MatButtonLoadingDirective],\n})\nexport class MtxButtonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAwBa,yBAAyB;IAapC,YACU,SAAoB,EACpB,wBAAkD,EAClD,gBAAkC,EAClC,QAAmB;QAHnB,cAAS,GAAT,SAAS,CAAW;QACpB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,aAAQ,GAAR,QAAQ,CAAW;QAE3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,CAAC;KACjG;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACpB,OAAO;SACR;QAED,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE;YAChC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAC7E,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE;YACvC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;YAChF,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAEO,aAAa;QACnB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC1E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,eAAe,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,EACxC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAChD,CAAC;SACH;KACF;IAEO,cAAc;QACpB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;KACF;;;YAjEF,SAAS,SAAC;gBACT,QAAQ,EAAE;;;;;;2CAM+B;aAC1C;;;;YAXQ,SAAS;YAVhB,wBAAwB;YAOxB,gBAAgB;YAFhB,SAAS;;;sBAqBR,KAAK;uBAGL,KAAK;oBAGL,KAAK;;;MCtBK,eAAe;;;YAL3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,wBAAwB,CAAC;gBAClE,OAAO,EAAE,CAAC,yBAAyB,CAAC;gBACpC,YAAY,EAAE,CAAC,yBAAyB,CAAC;aAC1C;;;ACXD;;;;;;"}