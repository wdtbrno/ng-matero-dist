{"version":3,"file":"mtxDialog.js","sources":["../../../projects/extensions/dialog/dialog.component.ts","../../../projects/extensions/dialog/dialog.ts","../../../projects/extensions/dialog/dialog.module.ts","../../../projects/extensions/dialog/mtxDialog.ts"],"sourcesContent":["import { Component, Inject, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { MtxDialogData } from './dialog.config';\n\n@Component({\n  selector: 'mtx-dialog',\n  exportAs: 'mtxDialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MtxDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<MtxDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData\n  ) {}\n\n  _onClick(fn: () => void) {\n    if (fn) {\n      fn.call(this);\n    }\n    this._onClose();\n  }\n\n  _onClose() {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { MtxDialogComponent } from './dialog.component';\nimport { MtxDialogData } from './dialog.config';\nimport { Observable } from 'rxjs';\n\nconst defaults: MtxDialogData = {\n  title: '',\n  description: '',\n  buttons: [\n    {\n      color: 'warn',\n      text: 'OK',\n      focusInitial: true,\n      onClick: () => {},\n    },\n    {\n      text: 'CLOSE',\n      onClick: () => {},\n    },\n  ],\n  showCloseIcon: false,\n  disableClose: true,\n  width: '300px',\n};\n\n@Injectable()\nexport class MtxDialog {\n  constructor(public dialog: MatDialog) {}\n\n  originalOpen(\n    componentOrTemplateRef: ComponentType<any> | TemplateRef<any> = MtxDialogComponent,\n    config: any\n  ) {\n    return this.dialog.open(componentOrTemplateRef, config);\n  }\n\n  open(\n    config: MtxDialogData,\n    componentOrTemplateRef: ComponentType<any> | TemplateRef<any> = MtxDialogComponent\n  ) {\n    const data = Object.assign({}, defaults, config);\n    return this.dialog.open(componentOrTemplateRef, {\n      ...data,\n      data,\n    });\n  }\n\n  alert(\n    title: string | Observable<string>,\n    description: string | Observable<string> = '',\n    onOk = () => {}\n  ) {\n    this.open({\n      title,\n      description,\n      buttons: [\n        {\n          color: 'warn',\n          text: 'OK',\n          onClick: () => onOk(),\n        },\n      ],\n    });\n  }\n\n  confirm(\n    title: string | Observable<string>,\n    description: string | Observable<string> = '',\n    onOk = () => {},\n    onClose = () => {}\n  ) {\n    this.open({\n      title,\n      description,\n      buttons: [\n        {\n          color: 'warn',\n          text: 'OK',\n          onClick: () => onOk(),\n        },\n        {\n          text: 'CLOSE',\n          onClick: () => onClose(),\n        },\n      ],\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { MtxUtilsModule } from '@ng-matero/extensions/utils';\nimport { MtxDialogComponent } from './dialog.component';\nimport { MtxDialog } from './dialog';\n\n@NgModule({\n  imports: [CommonModule, MatDialogModule, MatButtonModule, MatIconModule, MtxUtilsModule],\n  exports: [MtxDialogComponent],\n  declarations: [MtxDialogComponent],\n  providers: [MtxDialog],\n  entryComponents: [MtxDialogComponent],\n})\nexport class MtxDialogModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;MAaa,kBAAkB;IAC7B,YACS,SAA2C,EAClB,IAAmB;QAD5C,cAAS,GAAT,SAAS,CAAkC;QAClB,SAAI,GAAJ,IAAI,CAAe;KACjD;IAEJ,QAAQ,CAAC,EAAc;QACrB,IAAI,EAAE,EAAE;YACN,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACf;QACD,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;;YAvBF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE,WAAW;gBACrB,snFAAsC;gBAEtC,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;aAChD;;;;YAXQ,YAAY;4CAehB,MAAM,SAAC,eAAe;;;WCAZ,SAAQ,OAIR;AAZf,MAAM,QAAQ,GAAkB;IAC9B,KAAK,EAAE,EAAE;IACT,WAAW,EAAE,EAAE;IACf,OAAO,EAAE;QACP;YACE,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,IAAI;YAClB,OAAO,IAAU;SAClB;QACD;YACE,IAAI,EAAE,OAAO;YACb,OAAO,IAAU;SAClB;KACF;IACD,aAAa,EAAE,KAAK;IACpB,YAAY,EAAE,IAAI;IAClB,KAAK,EAAE,OAAO;CACf,CAAC;MAGW,SAAS;IACpB,YAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;KAAI;IAExC,YAAY,CACV,yBAAgE,kBAAkB,EAClF,MAAW;QAEX,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAC;KACzD;IAED,IAAI,CACF,MAAqB,EACrB,yBAAgE,kBAAkB;QAElF,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,kCACzC,IAAI,KACP,IAAI,IACJ,CAAC;KACJ;IAED,KAAK,CACH,KAAkC,EAClC,cAA2C,EAAE,EAC7C,IAAI,GAAG,SAAQ;QAEf,IAAI,CAAC,IAAI,CAAC;YACR,KAAK;YACL,WAAW;YACX,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,MAAM,IAAI,EAAE;iBACtB;aACF;SACF,CAAC,CAAC;KACJ;IAED,OAAO,CACL,KAAkC,EAClC,cAA2C,EAAE,EAC7C,IAAI,GAAG,SAAQ,EACf,OAAO,GAAG,SAAQ;QAElB,IAAI,CAAC,IAAI,CAAC;YACR,KAAK;YACL,WAAW;YACX,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,MAAM,IAAI,EAAE;iBACtB;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,MAAM,OAAO,EAAE;iBACzB;aACF;SACF,CAAC,CAAC;KACJ;;;YA7DF,UAAU;;;;YA1BF,SAAS;;;MCeL,eAAe;;;YAP3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,aAAa,EAAE,cAAc,CAAC;gBACxF,OAAO,EAAE,CAAC,kBAAkB,CAAC;gBAC7B,YAAY,EAAE,CAAC,kBAAkB,CAAC;gBAClC,SAAS,EAAE,CAAC,SAAS,CAAC;gBACtB,eAAe,EAAE,CAAC,kBAAkB,CAAC;aACtC;;;AChBD;;;;;;"}