{"version":3,"sources":["../../../projects/extensions/alert/alert.component.ts","../../../projects/extensions/alert/alert.module.ts"],"names":["MtxAlertComponent","_changeDetectorRef","this","type","_dismissible","elevation","closed","EventEmitter","Object","defineProperty","prototype","value","coerceBooleanProperty","_onClosed","markForCheck","emit","Component","args","selector","exportAs","host","[class.mtx-alert]","[class.mtx-alert-dismissible]","role","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","HostBinding","Input","Output","NgModule","imports","CommonModule","exports","declarations"],"mappings":"6kBAsDE,SAAAA,EAAoBC,GAAAC,KAAAD,mBAAAA,EArBXC,KAAAC,KAAqB,UAUtBD,KAAAE,cAAe,EAMdF,KAAAG,UAAY,EAGXH,KAAAI,OAAS,IAAIC,EAAAA,oBAxBvBC,OAAAC,eAA0BT,EAAAU,UAAA,gBAAa,KAAvC,WACE,MAAO,aAAaR,KAAKC,KAAI,mBAAmBD,KAAKG,2CAOvDG,OAAAC,eACIT,EAAAU,UAAA,cAAW,KADf,WAEE,OAAOR,KAAKE,kBAEd,SAAgBO,GACdT,KAAKE,aAAeQ,EAAAA,sBAAsBD,oCAe5CX,EAAAU,UAAAG,UAAA,WACEX,KAAKD,mBAAmBa,eACxBZ,KAAKI,OAAOS,KAAKb,gCA5CpBc,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,YACVC,SAAU,WACVC,KAAM,CACJC,oBAAqB,OACrBC,gCAAiC,cACjCC,KAAQ,SAEVC,SAAA,uOAEAC,cAAeC,EAAAA,kBAAkBC,KACjCC,gBAAiBC,EAAAA,wBAAwBC,0fAlBzCC,EAAAA,4DAqBCC,EAAAA,YAAWf,KAAA,CAAC,uBAKZgB,EAAAA,2BAGAA,EAAAA,qBAUAA,EAAAA,yBAGAA,EAAAA,sBAGAC,EAAAA,gBC1CH,iCALCC,EAAAA,SAAQlB,KAAA,CAAC,CACRmB,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACtC,GACVuC,aAAc,CAACvC","sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  HostBinding,\n} from '@angular/core';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\nexport type MtxAlertType = 'default' | 'info' | 'success' | 'warning' | 'danger';\n\n@Component({\n  selector: 'mtx-alert',\n  exportAs: 'mtxAlert',\n  host: {\n    '[class.mtx-alert]': 'true',\n    '[class.mtx-alert-dismissible]': 'dismissible',\n    'role': 'alert',\n  },\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MtxAlertComponent {\n  @HostBinding('class') get hostClassList() {\n    return `mtx-alert-${this.type} mat-elevation-z${this.elevation}`;\n  }\n\n  /** The alert type */\n  @Input() type: MtxAlertType = 'default';\n\n  /** Whether displays an inline `Close` button */\n  @Input()\n  get dismissible(): boolean {\n    return this._dismissible;\n  }\n  set dismissible(value: boolean) {\n    this._dismissible = coerceBooleanProperty(value);\n  }\n  private _dismissible = false;\n\n  /** The alert text color */\n  @Input() color!: string;\n\n  /** Material elevation */\n  @Input() elevation = 0;\n\n  /** This event fires when alert closed, $event is an instance of Alert component */\n  @Output() closed = new EventEmitter<MtxAlertComponent>();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  _onClosed(): void {\n    this._changeDetectorRef.markForCheck();\n    this.closed.emit(this);\n  }\n\n  static ngAcceptInputType_dismissible: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MtxAlertComponent } from './alert.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MtxAlertComponent],\n  declarations: [MtxAlertComponent],\n})\nexport class MtxAlertModule {}\n"]}