{"version":3,"sources":["../../../projects/extensions/dialog/dialog.component.ts","../../../projects/extensions/dialog/dialog.ts","../../../projects/extensions/dialog/dialog.module.ts"],"names":["MtxDialogComponent","dialogRef","data","this","prototype","_onClick","fn","call","_onClose","close","Component","args","selector","exportAs","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","MatDialogRef","Inject","MAT_DIALOG_DATA","ɵ1","defaults","title","description","buttons","color","text","focusInitial","onClick","ɵ0","showCloseIcon","disableClose","width","MtxDialog","dialog","originalOpen","componentOrTemplateRef","config","open","Object","assign","alert","onOk","confirm","onClose","Injectable","MatDialog","NgModule","imports","CommonModule","MatDialogModule","MatButtonModule","MatIconModule","MtxUtilsModule","exports","declarations","providers","entryComponents"],"mappings":"q2BAcE,SAAAA,EACSC,EACyBC,GADzBC,KAAAF,UAAAA,EACyBE,KAAAD,KAAAA,SAGlCF,EAAAI,UAAAC,SAAA,SAASC,GACHA,GACFA,EAAGC,KAAKJ,MAEVA,KAAKK,YAGPR,EAAAI,UAAAI,SAAA,WACEL,KAAKF,UAAUQ,kCAtBlBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,aACVC,SAAU,YACVC,SAAA,2hFAEAC,cAAeC,EAAAA,kBAAkBC,KACjCC,gBAAiBC,EAAAA,wBAAwBC,ufAVlCC,EAAAA,6CAeJC,EAAAA,OAAMX,KAAA,CAACY,EAAAA,4BCAG,aAAQC,EAIR,aAZTC,EAA0B,CAC9BC,MAAO,GACPC,YAAa,GACbC,QAAS,CACP,CACEC,MAAO,OACPC,KAAM,KACNC,cAAc,EACdC,QAAOC,GAET,CACEH,KAAM,QACNE,QAAOR,IAGXU,eAAe,EACfC,cAAc,EACdC,MAAO,sBAKP,SAAAC,EAAmBC,GAAAnC,KAAAmC,OAAAA,SAEnBD,EAAAjC,UAAAmC,aAAA,SACEC,EACAC,GAEA,YAHA,IAAAD,IAAAA,EAAAxC,GAGOG,KAAKmC,OAAOI,KAAKF,EAAwBC,IAGlDJ,EAAAjC,UAAAsC,KAAA,SACED,EACAD,QAAA,IAAAA,IAAAA,EAAAxC,GAEA,IAAME,EAAOyC,OAAOC,OAAO,GAAInB,EAAUgB,GACzC,OAAOtC,KAAKmC,OAAOI,KAAKF,EAAsBG,OAAAC,OAAAD,OAAAC,OAAA,GACzC1C,GAAI,CACPA,KAAIA,MAIRmC,EAAAjC,UAAAyC,MAAA,SACEnB,EACAC,EACAmB,QADA,IAAAnB,IAAAA,EAAA,SACA,IAAAmB,IAAAA,EAAA,cAEA3C,KAAKuC,KAAK,CACRhB,MAAKA,EACLC,YAAWA,EACXC,QAAS,CACP,CACEC,MAAO,OACPC,KAAM,KACNE,QAAS,WAAM,OAAAc,UAMvBT,EAAAjC,UAAA2C,QAAA,SACErB,EACAC,EACAmB,EACAE,QAFA,IAAArB,IAAAA,EAAA,SACA,IAAAmB,IAAAA,EAAA,mBACA,IAAAE,IAAAA,EAAA,cAEA7C,KAAKuC,KAAK,CACRhB,MAAKA,EACLC,YAAWA,EACXC,QAAS,CACP,CACEC,MAAO,OACPC,KAAM,KACNE,QAAS,WAAM,OAAAc,MAEjB,CACEhB,KAAM,QACNE,QAAS,WAAM,OAAAgB,mCAzDxBC,EAAAA,sDA1BQC,EAAAA,mBCeT,iCAPCC,EAAAA,SAAQxC,KAAA,CAAC,CACRyC,QAAS,CAACC,EAAAA,aAAcC,EAAAA,gBAAiBC,EAAAA,gBAAiBC,EAAAA,cAAeC,EAAAA,gBACzEC,QAAS,CAAC1D,GACV2D,aAAc,CAAC3D,GACf4D,UAAW,CAACvB,GACZwB,gBAAiB,CAAC7D","sourcesContent":["import { Component, Inject, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { MtxDialogData } from './dialog.config';\n\n@Component({\n  selector: 'mtx-dialog',\n  exportAs: 'mtxDialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MtxDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<MtxDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: MtxDialogData\n  ) {}\n\n  _onClick(fn: () => void) {\n    if (fn) {\n      fn.call(this);\n    }\n    this._onClose();\n  }\n\n  _onClose() {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { MtxDialogComponent } from './dialog.component';\nimport { MtxDialogData } from './dialog.config';\nimport { Observable } from 'rxjs';\n\nconst defaults: MtxDialogData = {\n  title: '',\n  description: '',\n  buttons: [\n    {\n      color: 'warn',\n      text: 'OK',\n      focusInitial: true,\n      onClick: () => {},\n    },\n    {\n      text: 'CLOSE',\n      onClick: () => {},\n    },\n  ],\n  showCloseIcon: false,\n  disableClose: true,\n  width: '300px',\n};\n\n@Injectable()\nexport class MtxDialog {\n  constructor(public dialog: MatDialog) {}\n\n  originalOpen(\n    componentOrTemplateRef: ComponentType<any> | TemplateRef<any> = MtxDialogComponent,\n    config: any\n  ) {\n    return this.dialog.open(componentOrTemplateRef, config);\n  }\n\n  open(\n    config: MtxDialogData,\n    componentOrTemplateRef: ComponentType<any> | TemplateRef<any> = MtxDialogComponent\n  ) {\n    const data = Object.assign({}, defaults, config);\n    return this.dialog.open(componentOrTemplateRef, {\n      ...data,\n      data,\n    });\n  }\n\n  alert(\n    title: string | Observable<string>,\n    description: string | Observable<string> = '',\n    onOk = () => {}\n  ) {\n    this.open({\n      title,\n      description,\n      buttons: [\n        {\n          color: 'warn',\n          text: 'OK',\n          onClick: () => onOk(),\n        },\n      ],\n    });\n  }\n\n  confirm(\n    title: string | Observable<string>,\n    description: string | Observable<string> = '',\n    onOk = () => {},\n    onClose = () => {}\n  ) {\n    this.open({\n      title,\n      description,\n      buttons: [\n        {\n          color: 'warn',\n          text: 'OK',\n          onClick: () => onOk(),\n        },\n        {\n          text: 'CLOSE',\n          onClick: () => onClose(),\n        },\n      ],\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { MtxUtilsModule } from '@ng-matero/extensions/utils';\nimport { MtxDialogComponent } from './dialog.component';\nimport { MtxDialog } from './dialog';\n\n@NgModule({\n  imports: [CommonModule, MatDialogModule, MatButtonModule, MatIconModule, MtxUtilsModule],\n  exports: [MtxDialogComponent],\n  declarations: [MtxDialogComponent],\n  providers: [MtxDialog],\n  entryComponents: [MtxDialogComponent],\n})\nexport class MtxDialogModule {}\n"]}